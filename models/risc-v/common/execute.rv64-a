// 64-A Standard Extension
execute(lr_d)
{
	typename word_t addr = read_gpr(inst.rs1);
	uint64 val;
	mem_read_64(Mem, addr, val);

	write_register_bank(GPR, inst.rd, val);

}

execute(sc_d)
{
	typename word_t rs2 = read_gpr(inst.rs2);
	typename word_t addr = read_gpr(inst.rs1);	
	mem_write_32(Mem, addr, rs2);
	
	write_register_bank(GPR, inst.rd, 0);
}

execute(amoswapd)
{
	// todo: this, but atomic
	typename word_t addr = read_gpr(inst.rs1);
	uint64 val;
	mem_read_64(Mem, addr, val);
	
	uint64 rs2 = read_gpr(inst.rs2);
	write_register_bank(GPR, inst.rd, val);
	
	mem_write_64(Mem, addr, rs2);
}

execute(amoaddd)
{
	// todo: this, but atomic
	uint64 addr = read_gpr(inst.rs1);
	uint64 val;
	mem_read_64(Mem, addr, val);
	
	uint64 rs2 = read_gpr(inst.rs2);
	write_register_bank(GPR, inst.rd, val);
	
	mem_write_64(Mem, addr, rs2 + val);
}

execute(amoandd)
{
	trap();
}

execute(amoord)
{
	trap();
}

execute(amoxord)
{
	trap();
}

execute(amomaxd)
{
	trap();
}

execute(amomaxud)
{
	// todo: this, but atomic
	uint64 addr = read_gpr(inst.rs1);
	uint64 val;
	mem_read_64(Mem, addr, val);
	
	uint64 rs2 = read_gpr(inst.rs2);
	write_register_bank(GPR, inst.rd, val);
	
	if(rs2 > val) {
		val = rs2;
	}
	
	mem_write_64(Mem, addr, val);
}

execute(amomind)
{
	trap();
}

execute(amominud)
{
	trap();
}
