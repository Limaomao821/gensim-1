AC_ISA(x86)
{
	// Most of the actual decoding for this model is handled by XED
	// through an external decoder.
	ac_format FORMAT_DUMMY = "%dummy:32";
	
	ac_instr<FORMAT_DUMMY> add, and, call, cmov, cmp, cpuid, jcond, jmp, lea, mov, movzx, movsxd, nop, or, pop, push, ret, setz, sub, test, xgetbv, xor;
	
	ac_behaviour add, and, call, cmp, cmov, cpuid, jcond, jmp, lea, mov, movzx, movsxd, nop, or, pop, push, ret, setz, sub, test, xgetbv, xor;

	ISA_CTOR(x86) {
		add.set_decoder();
		add.set_behaviour(add);
		
		and.set_decoder();
		and.set_behaviour(and);
	
		call.set_decoder();
		call.set_behaviour(call);
		call.set_end_of_block();
		call.set_variable_jump();
		
		cmov.set_decoder();
		cmov.set_behaviour(cmov);
	
		cmp.set_decoder();
		cmp.set_behaviour(cmp);
	
		cpuid.set_decoder();
		cpuid.set_behaviour(cpuid);
	
		jcond.set_decoder();
		jcond.set_behaviour(jcond);
		jcond.set_end_of_block();
		jcond.set_variable_jump();
	
		jmp.set_decoder();
		jmp.set_behaviour(jmp);
		jmp.set_end_of_block();
		jmp.set_variable_jump();
	
		lea.set_decoder();
		lea.set_behaviour(lea);
	
		mov.set_decoder();
		mov.set_behaviour(mov);
		
		movzx.set_decoder();
		movzx.set_behaviour(movzx);
		
		movsxd.set_decoder();
		movsxd.set_behaviour(movsxd);
		
		nop.set_decoder();
		nop.set_behaviour(nop);
		
		or.set_decoder();
		or.set_behaviour(or);
		
		pop.set_decoder();
		pop.set_behaviour(pop);
		
		push.set_decoder();
		push.set_behaviour(push);
		
		ret.set_decoder();
		ret.set_behaviour(ret);
		ret.set_end_of_block();
		ret.set_variable_jump();
		
		setz.set_decoder();
		setz.set_behaviour(setz);
		
		sub.set_decoder();
		sub.set_behaviour(sub);
		
		test.set_decoder();
		test.set_behaviour(test);
		
		xgetbv.set_decoder();
		xgetbv.set_behaviour(xgetbv);
		
		xor.set_decoder();
		xor.set_behaviour(xor);
	};
	
};
